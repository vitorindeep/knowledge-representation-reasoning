install.packages(c("neuralnet", "hydroGOF", "leaps", "arules"))
library(neuralnet)
library(hydroGOF)
library(leaps)
library(arules)
dados_ori <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional")
dados_ori <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv")
View(dados_ori)
funcao <- y ~ age+job+marital+education+default+housing+loan+contact+month+day_of_week+duration+campaign+pdays+previous+poutcome+emp.var.rate+cons.price.idx+cons.conf.idx+euribor3m+nr.employed
selecao <- regsubsets(funcao,dados_ori,nvmax=3)
View(dados_ori)
funcao<-y~age+job+marital+education+default+housing+loan+contact+month+day_of_week+duration+campaign+pdays+previous+poutcome+emp.var.rate+cons.price.idx+cons.conf.idx+euribor3m+nr.employed
selecao <- regsubsets(funcao,dados_ori,nvmax=3)
View(dados_ori)
dados_teste <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full.csv")
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(30), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(12), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(13), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(14), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(15), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(16), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(17), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( dados_ori, dados_teste, hidden = c(18), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(3), lifesign = "full", linear.output = FALSE, threshold = 0.1)
dados_ori <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv")
funcao <- answer ~ age+job+marital+education+default+housing+loan+contact+month+day_of_week+duration+campaign+pdays+previous+poutcome+emp.var.rate+cons.price.idx+cons.conf.idx+euribor3m+nr.employed
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(3), lifesign = "full", linear.output = FALSE, threshold = 0.1)
treino <- dados_ori[1:800, ]
rnacredito <- neuralnet( funcao, treino, hidden = c(3), lifesign = "full", linear.output = FALSE, threshold = 0.1)
remove(treino)
funcao <- answer ~ age + job + marital + education + default + housing + loan + contact + month + day_of_week + duration + campaign + pdays + previous + poutcome + emp.var.rate + cons.price.idx + cons.conf.idx + euribor3m + nr.employed
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(3), lifesign = "full", linear.output = FALSE, threshold = 0.1)
head(dados_ori)
dados_ori <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv")
funcao <- answer ~ age + job + marital + education + default + housing + loan + contact + month + day + duration + campaign + pdays + previous + poutcome + emp + priceidx + confidx + euribor3m + employed
rnacredito <- neuralnet( funcao, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(21), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(22), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(20), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(19), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(18), lifesign = "full", linear.output = FALSE, threshold = 0.1)
funcao <- answer ~ age + job + marital + education + default + housing + loan + contact + month + day + duration + campaign + pdays + previous + poutcome + emp + priceidx + confidx + euribor3m + employed
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
View(dados_ori)
dados_ori <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv")
funcao <- answer ~ age + job + marital + education + default + housing + loan + contact + month + day + duration + campaign + pdays + previous + poutcome + emp + priceidx + confidx + euribor3m + employed
rnacredito <- neuralnet( funcao, dados_ori, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
View(answer)
View(age)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv")
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv")
View(dadosOri)
head(dadosOri)
funcao <- answer ~ age + job + marital + education + default + housing + loan + contact + month + day + duration + campaign + pdays + previous + poutcome + emp + priceidx + confidx + euribor3m + employed
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
View(dados_ori)
View(dados_ori)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv", header=TRUE, sep=";", dec=".")
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(20), lifesign = "full", linear.output = FALSE, threshold = 0.1)
View(dados_ori)
View(dadosOri)
View(dados_ori)
remove(dados_ori)
remove(dadosOri)
remove(dados_teste)
remove(funcao)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".")
View(dadosOri)
funcao <- y ~ age + job + marital + education + default + housing + loan + contact + month + day_of_week + duration + campaign + pdays + previous + poutcome + emp.var.rate + cons.price.idx + cons.conf.idx + euribor3m + nr.employed
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
funcao <- y ~ age + duration + campaign + pdays + previous + emp.var.rate + cons.price.idx + cons.conf.idx + euribor3m + nr.employed
rnacredito <- neuralnet( funcao, dadosOri, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
dadosOri    [mydata$var3 > 500, c('var3')] <- NA
dadosOri[dadosOri$y == "no", c('y')] <- 0
View(dadosOri)
dadosOri[dadosOri$y == "yes"] <- 1
dadosOri$y[dadosOri$y == "yes"] <- 1
View(dadosOri)
remove(dadosOri)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".")
dadosMod <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional2.csv", header=TRUE, sep=";", dec=".")
View(dadosMod)
rnacredito <- neuralnet( funcao, dadosMod, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
treino <- dadosMod[1:800, ]
rnacredito <- neuralnet( funcao, treino, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
treino2 <- dadosMod[1:1600, ]
rnacredito <- neuralnet( funcao, treino2, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rnacredito <- neuralnet( funcao, dadosMod, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
remove(rnacredito)
rnacredito <- neuralnet( funcao, dadosMod, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
remove(treino)
remove(treino2)
remove(rnacredito)
rnacredito <- neuralnet( funcao, dadosMod, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rnacredito, rep = "best")
testeOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full.csv", header=TRUE, sep=";", dec=".")
testeMod <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full2.csv", header=TRUE, sep=";", dec=".")
View(dadosMod)
dadosMod$y[dadosMod$y = 0] <- no
dadosMod$y[dadosMod$y == 0] <- no
dadosMod$y[dadosMod$y = 0] <- no
dadosMod$y[dadosMod$y=0] <- no
dadosMod$y[dadosMod$y = "0"] <- no
dadosOri$y[dadosOri$y = no] <- 0
dadosOri$y[dadosOri$y == no] <- 0
View(dadosOri)
dadosOri$y[dadosOri$y == "no"] <- 0
dadosOri$y[dadosOri$y == "no"] <- "0"
dadosOri$y[dadosOri$y == "no"] <- as.numeric(0)
dadosOri$y[dadosOri$y == "no] <- as.numeric(0)
z
dadosOri$y[dadosOri$y == no] <- as.numeric(0)
dadosOri$y[dadosOri$y = no] <- as.numeric(0)
dadosOri$y[dadosOri$y = "no"] <- as.numeric(0)
dadosOri$y[dadosOri$y = 'no'] <- as.numeric(0)
dadosOri$y[dadosOri$y = 'no'] <- as.numeric(0)
View(dadosOri)
dadosOri$y[dadosOri$y = no] <- 0
dadosOri$y[dadosOri$y = "no"] <- 0
dadosOri$y[dadosOri$y = 'no'] <- 0
dadosOri$y[dadosOri$y == 'no'] <- 0
dadosOri$y[dadosOri$y == no] <- 0
dadosOri$y[dadosOri$y == "no"] <- 0
dadosOri[dadosOri$y == "no"] <- 0
dadosOri[dadosOri$y == no] <- 0
dadosOri[dadosOri$y = no] <- 0
dadosOri[dadosOri$y == "no"] <- 0
dadosOri[dadosOri$y == 'no'] <- 0
View(rnacredito)
plot(rnacredito)
dadosMod$y[dadosMod$y == no] <- 0
dadosOri$y[dadosOri$y == no] <- 0
dadosOri$y[dadosOri$y == no]
dadosOri$y
dadosOri$y[900]
dadosOri$y[900] <- 0
View(dadosOri)
View(dadosOri)
dadosOri$y[900] <- 1
dadosOri$y[900] <- 1.0
dadosOri$y[900] <- as.numeric(1)
class(dadosOri$y)
as.numeric(class(dadosOri$y))
class(dadosOri$pdays)
class(dadosOri$poutcome)
dadosString <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".", stringsAsFactors=FALSE)
View(dadosString)
class(dadosOri$poutcome)
as.character(class(dadosOri$y))
class(dadosOri$y)
as.character(dadosOri$y)
class(dadosOri$y)
as.character(dadosOri$y.factor)
class(dadosOri$y)
dadosOri$y <- as.character(dadosOri$y)
class(dadosOri$y)
dadosOri$y[dadosOri$y == no] <- 0
dadosOri$y[dadosOri$y == "no"] <- 0
View(dadosMod)
remove(dadosMod)
remove(dadosString)
remove(testeMod)
remove(testeOri)
remove(dadosOri)
remove(rnacredito)
remove(funcao)
dadosOri <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".")
View(dadosOri)
class(dadosOri$y)
dadosOri$y <- as.character(dadosOri$y)
class(dadosOri$y)
dadosOri$y[dadosOri$y == "no"] <- 0
dadosOri$y[dadosOri$y == "yes"] <- 1
class(dadosOri$poutcome)
dadosOri$poutcome <- as.character(dadosOri$poutcome)
class(dadosOri$poutcome)
class(dadosOri$day_of_week)
dadosOri$day_of_week <- as.character(dadosOri$day_of_week)
class(dadosOri$day_of_week)
class(dadosOri$month)
dadosOri$month <- as.character(dadosOri$month)
class(dadosOri$month)
class(dadosOri$contact)
dadosOri$contact <- as.character(dadosOri$contact)
class(dadosOri$contact)
class(dadosOri$loan)
dadosOri$loan <- as.character(dadosOri$loan)
class(dadosOri$loan)
class(dadosOri$housing)
dadosOri$housing <- as.character(dadosOri$housing)
class(dadosOri$housing)
class(dadosOri$default)
dadosOri$default <- as.character(dadosOri$default)
class(dadosOri$default)
class(dadosOri$education)
dadosOri$education <- as.character(dadosOri$education)
class(dadosOri$education)
class(dadosOri$marital)
dadosOri$marital <- as.character(dadosOri$marital)
class(dadosOri$marital)
class(dadosOri$job)
dadosOri$job <- as.character(dadosOri$job)
class(dadosOri$job)
dadosOri$poutcome[dadosOri$poutcome == "failure"] <- 0
dadosOri$poutcome[dadosOri$poutcome == "nonexistent"] <- 0.5
dadosOri$poutcome[dadosOri$poutcome == "success"] <- 1
dadosOri$day_of_week[dadosOri$day_of_week == "mon"] <- 0
dadosOri$day_of_week[dadosOri$day_of_week == "tue"] <- 0.25
dadosOri$day_of_week[dadosOri$day_of_week == "wed"] <- 0.5
dadosOri$day_of_week[dadosOri$day_of_week == "thu"] <- 0.75
dadosOri$day_of_week[dadosOri$day_of_week == "fri"] <- 1
dadosOri$month[dadosOri$month == "jan"] <- 0
dadosOri$month
class(dadosOri$month)
unique(dadosOri$month, incomparables = FALSE)
dadosOri$month[dadosOri$month == "may"] <- 1
dadosOri$month[dadosOri$month == "jun"] <- 2
dadosOri$month[dadosOri$month == "nov"] <- 3
dadosOri$month[dadosOri$month == "sep"] <- 4
dadosOri$month[dadosOri$month == "jul"] <- 5
dadosOri$month[dadosOri$month == "aug"] <- 6
dadosOri$month[dadosOri$month == "mar"] <- 7
dadosOri$month[dadosOri$month == "oct"] <- 8
dadosOri$month[dadosOri$month == "apr"] <- 9
dadosOri$month[dadosOri$month == "dec"] <- 10
unique(dadosOri$contact, incomparables = FALSE)
dadosOri$contact[dadosOri$contact == "cellular"] <- 0
dadosOri$contact[dadosOri$contact == "telephone"] <- 1
unique(dadosOri$loan, incomparables = FALSE)
dadosOri$loan[dadosOri$loan == "no"] <- 0
dadosOri$loan[dadosOri$loan == "unknown"] <- 0.5
dadosOri$loan[dadosOri$loan == "yes"] <- 1
unique(dadosOri$loan, incomparables = FALSE)
unique(dadosOri$housing, incomparables = FALSE)
dadosOri$housing[dadosOri$housing == "yes"] <- 1
dadosOri$housing[dadosOri$housing == "unknown"] <- 0.5
dadosOri$housing[dadosOri$housing == "no"] <- 0
unique(dadosOri$housing, incomparables = FALSE)
unique(dadosOri$default, incomparables = FALSE)
dadosOri$default[dadosOri$default == "no"] <- 0
dadosOri$default[dadosOri$default == "unknown"] <- 0.5
dadosOri$default[dadosOri$default == "yes"] <- 1
unique(dadosOri$default, incomparables = FALSE)
class(dadosOri$housing)
str(dados)
str(dadosori)
str(dadosOri)
dadosOri$default <- as.numeric(dadosOri$default)
str(dadosori)
str(dadosOri)
dadosOri <- as.numeric(dadosOri)
dados <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".")
View(dados)
dados$y <- as.numeric(dados$y)
dados$poutcome <- as.numeric(dados$poutcome)
dados$day_of_week <- as.numeric(dados$day_of_week)
dados$month <- as.numeric(dados$month)
dados$contact <- as.numeric(dados$contact)
dados$contact <- as.numeric(dados$loan)
dados <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional.csv", header=TRUE, sep=";", dec=".")
dados$y <- as.numeric(dados$y)
dados$poutcome <- as.numeric(dados$poutcome)
dados$day_of_week <- as.numeric(dados$day_of_week)
dados$month <- as.numeric(dados$month)
dados$contact <- as.numeric(dados$contact)
dados$loan <- as.numeric(dados$loan)
dados$housing <- as.numeric(dados$housing)
dados$default <- as.numeric(dados$default)
dados$education <- as.numeric(dados$education)
dados$marital <- as.numeric(dados$marital)
dados$job <- as.numeric(dados$job)
srt(dados)
str(dados)
dados$age <- as.numeric(dados$age)
dados$duration <- as.numeric(dados$duration)
dados$campaign <- as.numeric(dados$campaign)
dados$pdays <- as.numeric(dados$pdays)
dados$previous <- as.numeric(dados$previous)
str(dados)
funcao <- y ~ age + job + marital + education + default + housing + loan + contact + month + day_of_week + duration + campaign + pdays + previous + poutcome + emp.var.rate + cons.price.idx + cons.conf.idx + euribor3m + nr.employed
?neuralnet
rnacredito <- neuralnet(funcao, dados, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
library(neuralnet)
rnacredito <- neuralnet(funcao, dados, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rnacredito, rep = "best")
?plot
plot(rnacredito)
dadosFull <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full.csv", header=TRUE, sep=";", dec=".")
selecao <- regsubsets(funcao, dados, nvmax=3)
library(hydroGOF)
library(leaps)
library(arules)
selecao <- regsubsets(funcao, dados, nvmax=3)
summary(selecao)
summary(selecao)
?regsubsets
selecao <- regsubsets(funcao,dados,method="backward")
summary(selecao)
selecao <- regsubsets(funcao, dados)
summary(selecao)
selecao <- regsubsets(funcao, dados)
summary(selecao)
dados(age)
dados(age)[1]
dados[1]
names(dados)
names(dados)[4] <- edu
names(dados)[4] <- "edu"
selecao <- regsubsets(funcao, dados)
library(arules)
library(hydroGOF)
library(leaps)
selecao <- regsubsets(funcao, dados)
summary(selecao)
selecao <- regsubsets(funcao,dados,method="backward")
summary(selecao)
selecao <- regsubsets(funcao,dados,method="forward")
summary(selecao)
selecao <- regsubsets(funcao,dados,method="seqrep")
summary(selecao)
selecao <- regsubsets(funcao,dados,method="backward")
summary(selecao)
names(dados)[4] <- "edu"
names(dados)[5] <- "def"
names(dados)[6] <- "hous"
names(dados)[8] <- "cont"
names(dados)[9] <- "mon"
names(dados)[10] <- "day"
names(dados)[11] <- "durat"
names(dados)[12] <- "camp"
names(dados)[14] <- "prev"
names(dados)[16] <- "emprate"
names(dados)[17] <- "considx"
names(dados)[18] <- "confidx"
names(dados)[19] <- "euri3m"
names(dados)[20] <- "nrempl"
dadosFull <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full.csv", header=TRUE, sep=";", dec=".")
remove(dadosFull)
dadosFull <- read.csv("C:\\Users\\Vitor Castro\\Desktop\\knowledge-representation-reasoning\\TP3\\bank-additional\\bank-additional-full.csv", header=TRUE, sep=";", dec=".")
library(neuralnet)
library(arules)
library(hydroGOF)
library(leaps)
teste.01 <- subset(dadosFull, select = c("contact", "month", "duration", "pdays", "poutcome", "emp.var.rate", "cons.price.idx", "cons.conf.idx"))
rnacredito.resultados <- compute(rnacredito, teste.01)
View(dadosFull)
dadosFull$age <- as.numeric(dadosFull$age)
dadosFull$job <- as.numeric(dadosFull$job)
dadosFull$marital <- as.numeric(dadosFull$marital)
dadosFull$education <- as.numeric(dadosFull$education)
dadosFull$default <- as.numeric(dadosFull$default)
dadosFull$housing <- as.numeric(dadosFull$housing)
dadosFull$loan <- as.numeric(dadosFull$loan)
dadosFull$contact <- as.numeric(dadosFull$contact)
dadosFull$month <- as.numeric(dadosFull$month)
dadosFull$day_of_week <- as.numeric(dadosFull$day_of_week)
dadosFull$duration <- as.numeric(dadosFull$duration)
dadosFull$campaign <- as.numeric(dadosFull$campaign)
dadosFull$pdays <- as.numeric(dadosFull$pdays)
dadosFull$previous <- as.numeric(dadosFull$previous)
dadosFull$poutcome <- as.numeric(dadosFull$poutcome)
dadosFull$emp.var.rate <- as.numeric(dadosFull$emp.var.rate)
dadosFull$cons.price.idx <- as.numeric(dadosFull$cons.price.idx)
dadosFull$cons.conf.idx <- as.numeric(dadosFull$cons.conf.idx)
dadosFull$euribor3m <- as.numeric(dadosFull$euribor3m)
dadosFull$nr.employed <- as.numeric(dadosFull$nr.employed)
dadosFull$y <- as.numeric(dadosFull$y)
rnacredito.resultados <- compute(rnacredito, teste.01)
library(neuralnet)
library(leaps)
library(arules)
library(hydroGOF)
rnacredito.resultados <- compute(rnacredito, teste.01)
str(dadosFull)
plot(rnacredito)
teste.01 <- subset(dadosFull, select = c("contact", "month", "duration", "pdays", "poutcome", "emp.var.rate", "cons.price.idx", "cons.conf.idx"))
rnacredito.resultados <- compute(rnacredito, teste.01)
formula.01 <- y ~ contact +  month + duration + pdays + poutcome + emp.var.rate + cons.price.idx + cons.conf.idx
rna.01 <- neuralnet( formula.01, dados, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
plot(rna.01)
rna.01.resultados <- compute(rna.01, teste.01)
resultados <- data.frame(atual = dados$y, previsao = rna.01.resultados$net.result)
resultados <- data.frame(atual = dadosFull$y, previsao = rna.01.resultados$net.result)
resultados$previsao <- round(resultados$previsao, digits=0)
rmse(c(dadosFull$y),c(resultados$previsao))
View(dados)
View(formula.01)
formula.01[[3]]
dadosRounded <- dados
View(dadosRounded)
dadosRounded$cons.conf.idx <- round(dadosRounded$cons.conf.idx, digits=1)
dadosRounded$euribor3m <- round(dadosRounded$euribor3m, digits=1)
round(dadosRounded$euribor3m, digits=1)
round(dadosRounded$euribor3m[989], digits=1)
dadosRounded$euribor3m <- round(dadosRounded$euribor3m, digits=1)
typeof(dadosRounded$euribor3m)
class(dadosRounded$euribor3m)
dadosRounded$euribor3m <- round(dadosRounded$euribor3m, 1)
dadosRounded$euribor3m[1]
dadosRounded$cons.price.idx[1]
dadosRounded$cons.price.idx <- round(dadosRounded$cons.price.idx, 1)
dadosRounded$cons.price.idx[1]
View(dadosRounded)
View(dadosRounded)
dadosRounded <- scale(dadosRounded)
?scale
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
dadosRounded <- range01(dadosRounded)
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
dadosRounded$age <- range01(dadosRounded$age)
dadosRounded$job <- range01(dadosRounded$job)
dadosRounded$marital <- range01(dadosRounded$marital)
dadosRounded$education <- range01(dadosRounded$education)
dadosRounded$default <- range01(dadosRounded$default)
dadosRounded$housing <- range01(dadosRounded$housing)
dadosRounded$housing <- range01(dadosRounded$housing)
dadosRounded$loan <- range01(dadosRounded$loan)
View(dadosRounded)
dadosRounded$contact <- range01(dadosRounded$contact)
dadosRounded$month <- range01(dadosRounded$month)
dadosRounded$day_of_week <- range01(dadosRounded$day_of_week)
dadosRounded$duration <- range01(dadosRounded$duration)
dadosRounded$campaign <- range01(dadosRounded$campaign)
dadosRounded$pdays <- range01(dadosRounded$pdays)
dadosRounded$previous <- range01(dadosRounded$previous)
dadosRounded$poutcome <- range01(dadosRounded$poutcome)
dadosRounded$emp.var.rate <- range01(dadosRounded$emp.var.rate)
dadosRounded$cons.price.idx <- range01(dadosRounded$cons.price.idx)
dadosRounded$cons.conf.idx <- range01(dadosRounded$cons.conf.idx)
dadosRounded$euribor3m <- range01(dadosRounded$euribor3m)
dadosRounded$nr.employed <- range01(dadosRounded$nr.employed)
View(dadosRounded)
dadosRounded <- round(dadosRounded, digits = 2)
dadosFullRounded <- dadosFull
View(dadosFullRounded)
dadosFullRounded$nr.employed <- range01(dadosFullRounded$nr.employed)
dadosFullRounded$euribor3m <- range01(dadosFullRounded$euribor3m)
dadosFullRounded$cons.conf.idx <- range01(dadosFullRounded$cons.conf.idx)
dadosFullRounded$cons.price.idx <- range01(dadosFullRounded$cons.price.idx)
dadosFullRounded$emp.var.rate <- range01(dadosFullRounded$emp.var.rate)
dadosFullRounded$poutcome <- range01(dadosFullRounded$poutcome)
dadosFullRounded$previous <- range01(dadosFullRounded$previous)
dadosFullRounded$pdays <- range01(dadosFullRounded$pdays)
dadosFullRounded$campaign <- range01(dadosFullRounded$campaign)
dadosFullRounded$duration <- range01(dadosFullRounded$duration)
dadosFullRounded$day_of_week <- range01(dadosFullRounded$day_of_week)
dadosFullRounded$month <- range01(dadosFullRounded$month)
dadosFullRounded$contact <- range01(dadosFullRounded$contact)
dadosFullRounded$loan <- range01(dadosFullRounded$loan)
dadosFullRounded$housing <- range01(dadosFullRounded$housing)
dadosFullRounded$default <- range01(dadosFullRounded$default)
dadosFullRounded$education <- range01(dadosFullRounded$education)
dadosFullRounded$marital <- range01(dadosFullRounded$marital)
dadosFullRounded$job <- range01(dadosFullRounded$job)
dadosFullRounded$age <- range01(dadosFullRounded$age)
dadosFullRounded <- round(dadosFullRounded, digits = 2)
rna.02 <- neuralnet(formula.01, dadosRounded, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
library(neuralnet)
rna.02 <- neuralnet(formula.01, dadosRounded, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rna.02 <- neuralnet(formula.01, dadosRounded, hidden = c(4), lifesign = "full", linear.output = FALSE, threshold = 0.1)
teste.02 <- subset(dadosFullRounded, select = c("contact", "month", "duration", "pdays", "poutcome", "emp.var.rate", "cons.price.idx", "cons.conf.idx"))
rna.02.resultados <- compute(rna.02, teste.02)
library(hydroGOF)
library(leaps)
library(arules)
resultadosNormalizados <- data.frame(atual = dadosFullRounded$y, previsao = rna.02.resultados$net.result)
resultadosNormalizados$previsao <- round(resultadosNormalizados$previsao, digits = 0)
rmse(c(dadosFullRounded$y), c(resultadosNormalizados$previsao))
rna.03 <- neuralnet(formula.01, dadosRounded, hidden = c(4,3,2), lifesign = "full", linear.output = FALSE, threshold = 0.1)
remove(rna.03)
rna.03 <- neuralnet(formula.01, dadosRounded, hidden = c(4,3,2), lifesign = "full", linear.output = FALSE, threshold = 0.1)
library(neuralnet)
library(hydroGOF)
library(arules)
library(leaps)
rna.03 <- neuralnet(formula.01, dadosRounded, hidden = c(4,3,2), lifesign = "full", linear.output = FALSE, threshold = 0.1)
rna.03.resultados <- compute(rna.03, teste.02)
resultadosNorm <- data.frame(atual = dadosFullRounded$y, previsao = rna.03.resultados$net.result)
resultadosNorm$previsao <- round(resultadosNorm$previsao, digits = 0)
rmse(c(dadosFullRounded$y), c(resultadosNorm$previsao))
plot(rna.03)
selecaoNew <- regsubsets(funcao, dadosRounded)
library(arules)
library(leaps)
library(hydroGOF)
library(neuralnet)
selecaoNew <- regsubsets(funcao, dadosRounded)
summary(selecaoNew)
rna.04 <- neuralnet(formula.01, dadosRounded, hidden = c(4,3,2), lifesign = "full", linear.output = FALSE, threshold = 0.05)
rna.04.resultados <- compute(rna.04, teste.02)
resultadosNorm <- data.frame(atual = dadosFullRounded$y, previsao = rna.04.resultados$net.result)
resultadosNorm$previsao <- round(resultadosNorm$previsao, digits = 0)
rmse(c(dadosFullRounded$y), c(resultadosNorm$previsao))
rna.05 <- neuralnet(formula.01, dadosRounded, hidden = c(4,3,2), lifesign = "full", linear.output = FALSE, threshold = 0.01)
rna.05.resultados <- compute(rna.05, teste.02)
resultadosNorm2 <- data.frame(atual = dadosFullRounded$y, previsao = rna.05.resultados$net.result)
resultadosNorm2$previsao <- round(resultadosNorm2$previsao, digits = 0)
rmse(c(dadosFullRounded$y), c(resultadosNorm2$previsao))
rna.06 <- neuralnet(formula.01, dadosRounded, hidden = c(5,2), lifesign = "full", linear.output = FALSE, threshold = 0.01)
rna.06.resultados <- compute(rna.06, teste.02)
resultadosNorm3 <- data.frame(atual = dadosFullRounded$y, previsao = rna.06.resultados$net.result)
resultadosNorm3$previsao <- round(resultadosNorm3$previsao, digits = 0)
rmse(c(dadosFullRounded$y), c(resultadosNorm3$previsao))
save.image("C:/Users/Vitor Castro/Desktop/knowledge-representation-reasoning/TP3/submissao/tp3.RData")
